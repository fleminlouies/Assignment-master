{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\Assignment-master\\\\src\\\\components\\\\Filter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { Grid, Card, InputBase, Select, FormControl, MenuItem, Button, InputLabel } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { PropertyContext } from '../context/context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  LeftBar: {\n    padding: 16,\n    borderRadius: 0\n  },\n  Heading: {\n    fontFamily: \"roboto\",\n    fontSize: 18,\n    fontWeight: 400,\n    letterSpacing: \" 0em\",\n    color: \"#F9F3FA\"\n  },\n  selectBody: {\n    background: \"#0C0B0B\",\n    padding: 16,\n    borderRadius: 15,\n    margin: \"10px 0px\"\n  },\n  labelText: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    color: \"#ca18aa\"\n  },\n  inputInput: {\n    fontFamily: \"roboto\",\n    fontSize: 14,\n    fontWeight: 500,\n    letterSpacing: \" 0em\",\n    color: \"#B8AFB6\"\n  },\n  select: {\n    maxWidth: 100,\n    fontSize: \"0.9rem\",\n    borderStyle: 'none',\n    color: \"#F9F3FA\",\n    padding: 0,\n    paddingTop: 5\n  },\n  icon: {\n    right: 12,\n    position: 'absolute',\n    userSelect: 'none',\n    color: \"#F9F3FA\",\n    pointerEvents: 'none'\n  },\n  paper: {\n    borderRadius: 15,\n    marginTop: 20,\n    maxHeight: 300,\n    background: '#0C0B0B'\n  },\n  list: {\n    paddingTop: 0,\n    paddingBottom: 0,\n    fontFamily: \"1rem\",\n    background: '#0C0B0B',\n    \"& li\": {\n      fontWeight: 200,\n      color: '#F9F3FA',\n      paddingTop: 12,\n      paddingBottom: 12,\n      background: \"#0C0B0B\"\n    },\n    \"& li:hover\": {\n      background: \"#0C0B0B\"\n    },\n    \"& li.Mui-selected\": {\n      fontWeight: 200,\n      fontFamily: \"1rem\",\n      color: '#F9F3FA',\n      background: \"#0C0B0B\"\n    },\n    \"& li.Mui-selected:hover\": {\n      background: \"#0C0B0B\",\n      color: '#F9F3FA'\n    }\n  },\n  Button: {\n    background: \"#D41553\",\n    borderRadius: 10,\n    color: \"#F9F3FA\",\n    padding: \"20px 0px\",\n    width: \"100%\",\n    margin: \"10px 0px\",\n    \"&:hover\": {\n      background: \"#D41553\",\n      borderRadius: 10,\n      color: \"#F9F3FA\"\n    }\n  }\n}));\n\nconst getUnique = (items, value) => {\n  return [...new Set(items.map(item => item[value]))];\n};\n\nexport default function Filter() {\n  _s();\n\n  const classes = useStyles();\n  const context = useContext(PropertyContext);\n  const [minPrice, setMinPrice] = useState('');\n  const [maxPrice, setMaxPrice] = useState('');\n  const [minBeds, setMinBeds] = useState('');\n  const [maxBeds, setMaxBeds] = useState('');\n  const [data] = useState('');\n  let Price = getUnique(context.initialData, 'price');\n  let Beds = getUnique(context.initialData, 'Beds');\n\n  const iconComponent = props => {\n    return /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {\n      className: props.className + \" \" + classes.icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this);\n  };\n\n  const menuProps = {\n    classes: {\n      paper: classes.paper,\n      list: classes.list\n    },\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"left\"\n    },\n    transformOrigin: {\n      vertical: \"top\",\n      horizontal: \"left\"\n    },\n    getContentAnchorEl: null\n  };\n\n  const handleMinBeds = event => {\n    setMinBeds(event.target.value);\n  };\n\n  const handleMaxBeds = event => {\n    setMaxBeds(event.target.value);\n  };\n\n  const handleMinPrice = event => {\n    setMinPrice(event.target.value);\n  };\n\n  const handleMaxPrice = event => {\n    setMaxPrice(event.target.value);\n  };\n\n  const handleSubmit = () => {\n    context.handleChange({\n      minBeds: minBeds,\n      maxBeds: maxBeds,\n      minPrice: minPrice,\n      maxPrice: maxPrice\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.LeftBar,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.text,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: classes.Heading,\n          children: \"Find a rental property\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.selectBody,\n          elevation: 0,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-mutiple-chip-label\",\n            className: classes.labelText,\n            children: \"Search area\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(InputBase, {\n            placeholder: \"eg. Oxford or NW3\",\n            classes: {\n              input: classes.inputInput\n            },\n            inputProps: {\n              'aria-label': 'search'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: true,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: classes.selectBody,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"demo-mutiple-chip-label\",\n                className: classes.labelText,\n                children: \"Minimum beds\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                style: {\n                  width: \"100%\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Select, {\n                  SelectDisplayProps: {\n                    style: {\n                      minWidth: 100\n                    }\n                  },\n                  id: \"demo-mutiple-chip\",\n                  value: minBeds,\n                  onChange: handleMinBeds,\n                  classes: {\n                    root: classes.select\n                  },\n                  MenuProps: menuProps,\n                  disableUnderline: true,\n                  displayEmpty: true,\n                  IconComponent: iconComponent,\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"\",\n                    children: \"No min\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 41\n                  }, this), Beds.map((item, i) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: item,\n                    children: item\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 45\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: true,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: classes.selectBody,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"demo-mutiple-chip-label\",\n                className: classes.labelText,\n                children: \"Maximum beds\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                style: {\n                  width: \"100%\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Select, {\n                  SelectDisplayProps: {\n                    style: {\n                      minWidth: 100\n                    }\n                  },\n                  id: \"demo-mutiple-chip\",\n                  value: maxBeds,\n                  onChange: handleMaxBeds,\n                  classes: {\n                    root: classes.select\n                  },\n                  MenuProps: menuProps,\n                  disableUnderline: true,\n                  displayEmpty: true,\n                  IconComponent: iconComponent,\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"\",\n                    children: \"No max\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 41\n                  }, this), Beds.map((item, i) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: item,\n                    children: item\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 45\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.selectBody,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-mutiple-chip-label\",\n            className: classes.labelText,\n            children: \"Price per\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            style: {\n              width: \"100%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              SelectDisplayProps: {\n                style: {\n                  minWidth: \"100%\"\n                }\n              },\n              id: \"demo-mutiple-chip\",\n              value: data,\n              classes: {\n                root: classes.select\n              },\n              MenuProps: menuProps,\n              disableUnderline: true,\n              displayEmpty: true,\n              IconComponent: iconComponent,\n              children: /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: \"Monthly\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: true,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: classes.selectBody,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"demo-mutiple-chip-label\",\n                className: classes.labelText,\n                children: \"Minimum price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                style: {\n                  width: \"100%\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Select, {\n                  name: \"minPrice\",\n                  SelectDisplayProps: {\n                    style: {\n                      minWidth: 100\n                    }\n                  },\n                  id: \"demo-mutiple-chip\",\n                  value: minPrice,\n                  onChange: handleMinPrice,\n                  classes: {\n                    root: classes.select\n                  },\n                  MenuProps: menuProps,\n                  disableUnderline: true,\n                  displayEmpty: true,\n                  IconComponent: iconComponent,\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"\",\n                    children: \"No min\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 37\n                  }, this), Price.map((item, i) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: item,\n                    children: item\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 41\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: true,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: classes.selectBody,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"demo-mutiple-chip-label\",\n                className: classes.labelText,\n                children: \"Maximum price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                style: {\n                  width: \"100%\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Select, {\n                  SelectDisplayProps: {\n                    style: {\n                      minWidth: 100\n                    }\n                  },\n                  id: \"demo-mutiple-chip\",\n                  value: maxPrice,\n                  onChange: handleMaxPrice,\n                  classes: {\n                    root: classes.select\n                  },\n                  MenuProps: menuProps,\n                  disableUnderline: true,\n                  displayEmpty: true,\n                  IconComponent: iconComponent,\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"\",\n                    children: \"No max\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 302,\n                    columnNumber: 37\n                  }, this), Price.map((item, i) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: item,\n                    children: item\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 41\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.Button,\n          onClick: handleSubmit,\n          children: \"Find Properties\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Filter, \"rmeOX30N3e3LfA0kbksJWqN9jsg=\", false, function () {\n  return [useStyles];\n});\n\n_c = Filter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/Assignment-master/src/components/Filter.js"],"names":["React","useContext","useState","Grid","Card","InputBase","Select","FormControl","MenuItem","Button","InputLabel","makeStyles","ExpandMoreIcon","PropertyContext","useStyles","theme","LeftBar","padding","borderRadius","Heading","fontFamily","fontSize","fontWeight","letterSpacing","color","selectBody","background","margin","labelText","inputInput","select","maxWidth","borderStyle","paddingTop","icon","right","position","userSelect","pointerEvents","paper","marginTop","maxHeight","list","paddingBottom","width","getUnique","items","value","Set","map","item","Filter","classes","context","minPrice","setMinPrice","maxPrice","setMaxPrice","minBeds","setMinBeds","maxBeds","setMaxBeds","data","Price","initialData","Beds","iconComponent","props","className","menuProps","anchorOrigin","vertical","horizontal","transformOrigin","getContentAnchorEl","handleMinBeds","event","target","handleMaxBeds","handleMinPrice","handleMaxPrice","handleSubmit","handleChange","text","input","style","minWidth","root","i"],"mappings":"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","sourcesContent":["import React,{useContext, useState} from 'react';\nimport {\n    Grid, \n    Card, \n    InputBase,\n    Select,\n    FormControl,\n    MenuItem,\n    Button,\n    InputLabel }from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {PropertyContext} from '../context/context';\n\nconst useStyles = makeStyles((theme) => ({\n    LeftBar:{\n        padding:16,\n        borderRadius:0\n    },\n    Heading:{\n        fontFamily:\"roboto\",\n        fontSize: 18,\n        fontWeight: 400,\n        letterSpacing:\" 0em\",\n        color:\"#F9F3FA\"\n    },\n    selectBody:{\n        background:\"#0C0B0B\",\n        padding:16,\n        borderRadius:15,\n        margin:\"10px 0px\"\n    },\n    labelText:{\n        fontSize: 12,\n        fontWeight: 'bold',\n        color:\"#ca18aa\",\n    },\n    inputInput: {\n        fontFamily:\"roboto\",\n        fontSize: 14,\n        fontWeight: 500,\n        letterSpacing:\" 0em\",\n        color:\"#B8AFB6\",\n      },\n    select: {\n        maxWidth: 100,\n        fontSize:\"0.9rem\",\n        borderStyle:'none',\n        color:\"#F9F3FA\",\n        padding:0,\n        paddingTop:5,\n      },\n      icon:{\n        right: 12,\n        position: 'absolute',\n        userSelect: 'none',\n        color:\"#F9F3FA\",\n        pointerEvents: 'none'\n      },\n      paper: {\n        borderRadius: 15,\n        marginTop: 20,\n        maxHeight:300,\n        background:'#0C0B0B'\n      },\n      list: {\n        paddingTop:0,\n        paddingBottom:0,\n        fontFamily:\"1rem\",\n        background:'#0C0B0B',\n        \"& li\":{\n          fontWeight:200,\n          color:'#F9F3FA',\n          paddingTop:12,\n          paddingBottom:12,\n          background: \"#0C0B0B\"\n        },\n        \"& li:hover\":{\n          background: \"#0C0B0B\",\n        },\n        \"& li.Mui-selected\":{\n          fontWeight:200,\n          fontFamily:\"1rem\",\n          color:'#F9F3FA',\n          background: \"#0C0B0B\"\n        },\n        \"& li.Mui-selected:hover\":{\n          background: \"#0C0B0B\",\n          color:'#F9F3FA',\n        },\n    },\n    Button:{\n        background:\"#D41553\",\n        borderRadius:10,\n        color:\"#F9F3FA\",\n        padding:\"20px 0px\",\n        width:\"100%\",\n        margin: \"10px 0px\",\n        \"&:hover\":{\n            background:\"#D41553\",\n            borderRadius:10,\n            color:\"#F9F3FA\",\n          },\n    }\n  }));\n\nconst getUnique = (items, value)=>{\n    return[...new Set(items.map(item => item[value]))]\n}\n\nexport default function Filter() {\n    const classes = useStyles();\n    const context = useContext(PropertyContext)\n    const[minPrice, setMinPrice]= useState('')\n    const[maxPrice, setMaxPrice]= useState('')\n    const[minBeds, setMinBeds]= useState('')\n    const[maxBeds, setMaxBeds]= useState('')\n    const[data]= useState('')\n    \n    let Price= getUnique(context.initialData,'price');\n    let Beds= getUnique(context.initialData,'Beds');\n    \n    const iconComponent = (props) => {\n        return (\n            <ExpandMoreIcon className={props.className + \" \" + classes.icon}/>\n            )};\n\n    const menuProps = {\n        classes: {\n            paper: classes.paper,\n            list: classes.list\n        },\n        anchorOrigin: {\n            vertical: \"bottom\",\n            horizontal: \"left\"\n        },\n        transformOrigin: {\n            vertical: \"top\",\n            horizontal: \"left\"\n        },\n        getContentAnchorEl: null\n    };\n\n\n   const handleMinBeds = (event) =>{\n       setMinBeds(event.target.value)\n   }\n   const handleMaxBeds = (event) =>{\n       setMaxBeds(event.target.value)\n   }\n   const handleMinPrice = (event) =>{\n       setMinPrice(event.target.value)\n   }\n   const handleMaxPrice = (event) =>{\n       setMaxPrice(event.target.value)\n   }\n   const handleSubmit = () =>{\n       context.handleChange({\n        minBeds: minBeds,\n        maxBeds: maxBeds,\n        minPrice: minPrice,\n        maxPrice: maxPrice\n       })\n   }\n\n\n    return (\n        <div>\n            <div className={classes.LeftBar}>\n                <div className={classes.text}>\n                    <h2 className={classes.Heading}>Find a rental property</h2>\n                    <Card className={classes.selectBody} elevation={0}>\n                        <InputLabel id=\"demo-mutiple-chip-label\" className={classes.labelText}>Search area</InputLabel>\n                        <InputBase\n                            placeholder=\"eg. Oxford or NW3\"\n                            classes={{\n                            input: classes.inputInput,\n                            }}\n                            inputProps={{ 'aria-label': 'search' }}\n                        />\n                    </Card>\n                    <Grid container spacing={2}>\n                        <Grid item xs >\n                            <Card className={classes.selectBody}>\n                                <InputLabel id=\"demo-mutiple-chip-label\" className={classes.labelText}>Minimum beds</InputLabel>\n                                <FormControl style={{width:\"100%\"}}  >\n                                    <Select\n                                        SelectDisplayProps={{ style: { minWidth: 100 } }}\n                                        id=\"demo-mutiple-chip\"\n                                        value={minBeds}\n                                        onChange={handleMinBeds}\n                                        classes={{ root: classes.select }}\n                                        MenuProps={menuProps}\n                                        disableUnderline\n                                        displayEmpty\n                                        IconComponent={iconComponent}\n                                        >\n                                        <MenuItem  value=\"\"  >\n                                         No min\n                                        </MenuItem>\n                                        {Beds.map((item, i) => (\n                                            <MenuItem key={i} value={item}  >\n                                            {item}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n                                </FormControl>\n                            </Card>\n                        </Grid>\n                        <Grid item xs>\n                            <Card className={classes.selectBody}>\n                                <InputLabel id=\"demo-mutiple-chip-label\" className={classes.labelText}>Maximum beds</InputLabel>\n                                <FormControl style={{width:\"100%\"}} >\n                                    <Select\n                                        SelectDisplayProps={{ style: { minWidth: 100 } }}\n                                        id=\"demo-mutiple-chip\"\n                                        value={maxBeds}\n                                        onChange={handleMaxBeds}\n                                        classes={{ root: classes.select }}\n                                        MenuProps={menuProps}\n                                        disableUnderline\n                                        displayEmpty\n                                        IconComponent={iconComponent}\n                                        >\n                                        <MenuItem  value=\"\"  >\n                                         No max\n                                        </MenuItem>\n                                        {Beds.map((item, i) => (\n                                            <MenuItem key={i} value={item}  >\n                                            {item}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n                                </FormControl>\n                            </Card>\n                        </Grid>\n                    </Grid>\n                    \n                    <Card className={classes.selectBody}>\n                        <InputLabel id=\"demo-mutiple-chip-label\" className={classes.labelText}>Price per</InputLabel>\n                        <FormControl style={{width:\"100%\"}} >\n                            <Select\n                                SelectDisplayProps={{ style: { minWidth: \"100%\" } }}\n                                id=\"demo-mutiple-chip\"\n                                value={data}\n                                classes={{ root: classes.select }}\n                                MenuProps={menuProps}\n                                disableUnderline\n                                displayEmpty\n                                IconComponent={iconComponent}\n                                >\n                                <MenuItem  value=\"\"  >\n                                    Monthly\n                                </MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Card>\n                    <Grid container spacing={2}>\n                        <Grid item xs>\n                            <Card className={classes.selectBody}>\n                                <InputLabel id=\"demo-mutiple-chip-label\" className={classes.labelText}>Minimum price</InputLabel>\n                                <FormControl style={{width:\"100%\"}} >\n                                <Select\n                                    name=\"minPrice\"\n                                    SelectDisplayProps={{ style: { minWidth: 100 } }}\n                                    id=\"demo-mutiple-chip\"\n                                    value={minPrice}\n                                    onChange={handleMinPrice}\n                                    classes={{ root: classes.select }}\n                                    MenuProps={menuProps}\n                                    disableUnderline\n                                    displayEmpty\n                                    IconComponent={iconComponent}\n                                    >\n                                    <MenuItem  value=\"\"  >\n                                        No min\n                                    </MenuItem>\n                                    {Price.map((item, i) => (\n                                        <MenuItem key={i} value={item}  >\n                                        {item}\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                                </FormControl>\n                            </Card>\n                        </Grid>\n                        <Grid item xs>\n                            <Card className={classes.selectBody}>\n                                <InputLabel id=\"demo-mutiple-chip-label\" className={classes.labelText}>Maximum price</InputLabel>\n                                <FormControl style={{width:\"100%\"}} >\n                                <Select\n                                    SelectDisplayProps={{ style: { minWidth: 100 } }}\n                                    id=\"demo-mutiple-chip\"\n                                    value={maxPrice}\n                                    onChange={handleMaxPrice}\n                                    classes={{ root: classes.select }}\n                                    MenuProps={menuProps}\n                                    disableUnderline\n                                    displayEmpty\n                                    IconComponent={iconComponent}\n                                    >\n                                    <MenuItem  value=\"\"  >\n                                        No max\n                                    </MenuItem>\n                                    {Price.map((item, i) => (\n                                        <MenuItem key={i} value={item}  >\n                                        {item}\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                                </FormControl>\n                            </Card>\n                        </Grid>\n                    </Grid>\n                    <Button className={classes.Button} onClick={handleSubmit}>Find Properties</Button>\n                </div>\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}