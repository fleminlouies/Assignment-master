{"ast":null,"code":"var _jsxFileName = \"D:\\\\assignment-app\\\\src\\\\components\\\\PropertyList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Grid, Card, Paper, Container } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport { PropertyContext } from '../context/context';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  Head: {\n    color: \"#F9F3FA\"\n  },\n  Paper: {\n    background: \"#1C191D\",\n    borderRadius: 15,\n    padding: 8\n  }\n}));\nexport default function PropertyList() {\n  _s();\n\n  const classes = useStyles();\n  const context = useContext(PropertyContext);\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.Paper,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.Head,\n      children: \"15 Search result\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 1,\n      children: context.initialData.map(card => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.root,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            className: classes.paper,\n            elevation: 5,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/DetailPage/${card.id}`,\n                  children: /*#__PURE__*/_jsxDEV(ButtonBase, {\n                    className: classes.image,\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      className: classes.img,\n                      alt: \"complex\",\n                      src: `http://d3pow1askvtn2c.cloudfront.net/${(card.Media.find(({\n                        Order\n                      }) => Order === 0).MediaURL || card.Media[0]).split('images/').pop()}` || defaultImage\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 33,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 32,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 31,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: true,\n                container: true,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: true,\n                    container: true,\n                    direction: \"column\",\n                    spacing: 2,\n                    children: /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: true,\n                      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                        className: classes.Address,\n                        children: card.UnparsedAddress\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 41,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: classes.publicText,\n                        children: card.PublicRemarks\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 44,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 40,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 39,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n                      className: classes.Price,\n                      value: card.ListPrice,\n                      displayType: 'text',\n                      thousandSeparator: true,\n                      prefix: '$'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 50,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 49,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: classes.controls,\n                    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                      \"aria-label\": \"previous\",\n                      style: {\n                        color: \"rgb(28 110 169 / 74%)\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(HotelIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 57,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 56,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                      className: classes.iconText,\n                      children: card.BedroomsTotal || \"NA\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 59,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                      \"aria-label\": \"previous\",\n                      style: {\n                        color: \"rgb(28 110 169 / 74%)\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(BathtubIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 63,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 62,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                      className: classes.iconText,\n                      children: (card.BathroomsHalf % 2 == 0 ? card.BathroomsTotalInteger : ` ${parseInt(card.BathroomsTotalInteger - 1)}.5`) || \"NA\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 65,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                      \"aria-label\": \"previous\",\n                      style: {\n                        color: \"rgb(28 110 169 / 74%)\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(OpenWithIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 69,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 68,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                      className: classes.iconText,\n                      children: [card.BuildingAreaTotal != 0 ? /*#__PURE__*/_jsxDEV(NumberFormat, {\n                        value: card.BuildingAreaTotal,\n                        displayType: 'text',\n                        thousandSeparator: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 72,\n                        columnNumber: 85\n                      }, this) : \"--\", \" SQ Ft\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 71,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  container: true,\n                  children: /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    style: {\n                      width: '100%'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: classes.controls,\n                      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                        className: classes.treeLogo,\n                        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                          src: nwmlsImage,\n                          alt: \"NWMLS\",\n                          style: {\n                            height: \"25px\"\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 84,\n                          columnNumber: 57\n                        }, this), \"Listing courtesy of \", card.ListOfficeName]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 83,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Link, {\n                        to: `/DetailPage/${card.id}`,\n                        style: {\n                          marginLeft: \"auto\",\n                          textDecoration: 'none'\n                        },\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          className: classes.tourButton,\n                          startIcon: /*#__PURE__*/_jsxDEV(ArrowForwardIosIcon, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 88,\n                            columnNumber: 107\n                          }, this),\n                          size: \"small\",\n                          variant: \"contained\",\n                          children: \"Tour Now\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 88,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 87,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 82,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this)\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PropertyList, \"6Q5XXFdatmqS7IwGJO14E543zk8=\", false, function () {\n  return [useStyles];\n});\n\n_c = PropertyList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PropertyList\");","map":{"version":3,"sources":["D:/assignment-app/src/components/PropertyList.js"],"names":["React","useContext","Grid","Card","Paper","Container","Typography","PropertyContext","makeStyles","useStyles","theme","Head","color","background","borderRadius","padding","PropertyList","classes","context","initialData","map","card","root","paper","id","image","img","Media","find","Order","MediaURL","split","pop","defaultImage","Address","UnparsedAddress","publicText","PublicRemarks","Price","ListPrice","controls","iconText","BedroomsTotal","BathroomsHalf","BathroomsTotalInteger","parseInt","BuildingAreaTotal","width","treeLogo","nwmlsImage","height","ListOfficeName","marginLeft","textDecoration","tourButton"],"mappings":"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","sourcesContent":["import React,{useContext} from 'react';\r\nimport {Grid, Card, Paper, Container }from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {PropertyContext} from '../context/context';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    Head:{\r\n        color: \"#F9F3FA\"\r\n    },\r\n    Paper:{\r\n        background:\"#1C191D\",\r\n        borderRadius: 15,\r\n        padding: 8\r\n    }\r\n  }));\r\n\r\nexport default function PropertyList() {\r\n    const classes = useStyles();\r\n    const context = useContext(PropertyContext)\r\n    return (\r\n        <Paper className={classes.Paper} >\r\n            <Typography className={classes.Head}>15 Search result</Typography>\r\n            <Grid container spacing={1}>\r\n                {context.initialData.map((card)=>(\r\n                    <Grid item key={card.id} xs={12} >\r\n                        <div className={classes.root}>\r\n                            <Paper className={classes.paper} elevation={5}>\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item>\r\n                                        <Link  to={`/DetailPage/${card.id}`} >\r\n                                            <ButtonBase className={classes.image}>\r\n                                                <img className={classes.img} alt=\"complex\" src={(`http://d3pow1askvtn2c.cloudfront.net/${(card.Media.find(({Order}) => Order === 0).MediaURL || card.Media[0]).split('images/').pop()}`) || defaultImage} />\r\n                                            </ButtonBase>\r\n                                        </Link>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm container>\r\n                                        <Grid  container>\r\n                                            <Grid item xs container direction=\"column\" spacing={2}>\r\n                                                <Grid item xs>\r\n                                                    <h1 className={classes.Address}>\r\n                                                        {card.UnparsedAddress}\r\n                                                    </h1>\r\n                                                    <p className={classes.publicText}>\r\n                                                        {card.PublicRemarks}\r\n                                                    </p>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <NumberFormat className={classes.Price} value={card.ListPrice} displayType={'text'} thousandSeparator={true} prefix={'$'} />\r\n                                                {/* {card.CountyOrParish} */}\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <div className={classes.controls}>\r\n                                                <IconButton aria-label=\"previous\" style={{color  : \"rgb(28 110 169 / 74%)\"}}>\r\n                                                    <HotelIcon/> \r\n                                                </IconButton>\r\n                                                <h5 className={classes.iconText}>\r\n                                                    {card.BedroomsTotal || \"NA\"}\r\n                                                </h5>\r\n                                                <IconButton aria-label=\"previous\" style={{color  :\"rgb(28 110 169 / 74%)\"}}>\r\n                                                    <BathtubIcon/>\r\n                                                </IconButton>\r\n                                                <h5 className={classes.iconText}>\r\n                                                    { (card.BathroomsHalf % 2 == 0 ? card.BathroomsTotalInteger :` ${parseInt(card.BathroomsTotalInteger - 1)}.5`) || \"NA\"}\r\n                                                </h5>\r\n                                                <IconButton aria-label=\"previous\" style={{color  :\"rgb(28 110 169 / 74%)\"}}>\r\n                                                    <OpenWithIcon/>\r\n                                                </IconButton>\r\n                                                <h5 className={classes.iconText}>\r\n                                                    {card.BuildingAreaTotal != 0 ?  <NumberFormat value={card.BuildingAreaTotal} displayType={'text'} thousandSeparator={true}  /> : \"--\"} SQ Ft\r\n                                                    {/* {`${card.BuildingAreaTotal} Sq Ft `} */}\r\n                                                </h5>\r\n                                                {/* <Button className={classes.tourButton} startIcon={<ArrowForwardIosIcon />} size=\"small\" variant=\"contained\">\r\n                                                    Tour Now\r\n                                                </Button> */}\r\n                                            </div>\r\n                                        </Grid>\r\n                                        <Grid item container >\r\n                                            <Grid item style={{width:'100%'}}>\r\n                                                <div className={classes.controls}>\r\n                                                    <h5 className={classes.treeLogo}>\r\n                                                        <img src={nwmlsImage} alt='NWMLS' style={{height:\"25px\"}}/>\r\n                                                        Listing courtesy of {card.ListOfficeName}\r\n                                                    </h5>\r\n                                                    <Link  to={`/DetailPage/${card.id}`} style={{marginLeft : \"auto\", textDecoration: 'none'}} >\r\n                                                        <Button className={classes.tourButton} startIcon={<ArrowForwardIosIcon />} size=\"small\" variant=\"contained\">\r\n                                                            Tour Now\r\n                                                        </Button>\r\n                                                    </Link>\r\n                                                </div>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Paper>\r\n                        </div>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        </Paper>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}